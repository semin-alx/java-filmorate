
-- Таблица жанры фильмов

CREATE TABLE genre (
	genre_id INT,
	name VARCHAR(100),
	PRIMARY KEY (genre_id)
);

-- Рейтинг фильмов MPAA

CREATE TABLE rating_mpaa (
	mpaa_id VARCHAR(10), -- G, PG, PG-13 ...
	descr VARCHAR(100),
	PRIMARY KEY (mpaa_id)
);

-- Таблица фильмов

CREATE TABLE film (
	film_id INT,
	name VARCHAR(100),
	descr VARCHAR(200),
	release_date DATE,
	duration INT,
	mpaa_id VARCHAR(10),
	PRIMARY KEY (film_id),
	FOREIGN KEY (mpaa_id) REFERENCES rating_mpaa(mpaa_id)
);

-- Таблица связки фильмов и жанров
CREATE TABLE film_genre (
	film_id INT,
	genre_id INT,
	PRIMARY KEY (film_id, genre_id),
	FOREIGN KEY (film_id) REFERENCES film(film_id)
	FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);

-- Таблица пользователей
CREATE TABLE user (
	user_id INT,
	login VARCHAR(50),
	name VARCHAR(100),
	email VARCHAR(50),
	birthday DATE,
	PRIMARY KEY (user_id)
);

-- Таблица для хранения лайков
CREATE TABLE likes (
	user_id INT,
	film_id INT,
	PRIMARY KEY (user_id, film_id),
	FOREIGN KEY (user_id) REFERENCES user(user_id),
	FOREIGN KEY (film_id) REFERENCES film(film_id)
);

-- Таблица друзей
CREATE TABLE friend (
	user_id1 INT,
	user_id2 INT,
	status INT,
	FOREIGN KEY (user_id1) REFERENCES user(user_id),
	FOREIGN KEY (user_id2) REFERENCES user(user_id)
);

-- Выполним цепочку добавления в друзья

-- 1. Пользователь с user_id = 10 делает запрос на дружбу для пользователя с user_id = 20
INSERT INTO friend (user_id1, user_id2, status) 
VALUES (10, 20, 0)

-- 2. Пользователь с user_id = 20 подтверждает
UPDATE friend 
SET status = 1 
WHERE (user_id1 = 10) AND (user_id2 = 20)

-- Посмотрим, какие запросы на дружбу (кому) отправил user_id = 10
SELECT user.user_id, user.name
FROM friend
INNER JOIN user ON user.user_id = friend.user_id2 
WHERE (friend.user_id1 = 10) AND (friend.status = 0)

-- Посмотрим, какие запросы на дружбу (от кого) получил user_id = 20
SELECT user.user_id, user.name
FROM friend
INNER JOIN user ON user.user_id = friend.user_id1 
WHERE (friend.user_id2 = 20) AND (friend.status = 0)

-- Посморим теперь всех друзей для user_id = 10

SELECT u.*
FROM friend
INNER JOIN user u ON (u.user_id = friend.user_id1) OR (u.user_id = friend.user_id2)
WHERE ((friend.user_id1 = 10) OR (friend.user_id2 = 10)) AND (u.user_id <> 10) AND (friend.status = 1)

Такой некрасивый запрос, это следствие упрощения друзей до одной таблицы.























